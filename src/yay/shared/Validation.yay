<?php

$(macro :unsafe) {
    __expr_is_index($(T_VARIABLE as index))
} >> {
    \is_int($(index)) && $(index) >= 0 && $(index) < $this->elementCount
}

$(macro :unsafe) {
    __ensure_index($(T_VARIABLE as index))
} >> {{
// region __ensure_index
if (!\is_int($(index))) {
    $$(expand(__throw(\TypeError, 'Index must be of type int, '.\gettype($(index)).' given')))
}

if (0 === $this->elementCount) {
    $$(expand(__throw(\OutOfRangeException, 'The container is empty, so index '.$(index).' does not exist')))
}

if ($this->elementCount <= $(index)) { 
    $$(expand(__throw(\OutOfRangeException, 'Index out of range: '.$(index).', expected 0 <= x <= '.($this->elementCount - 1))))
}
// endregion
}}

$(macro :unsafe) {
    __ensure_value($(T_VARIABLE as value));
    $(_() as __context_Nullable)
    $(_() as __context_Signed)
    $(_() as __ensure_value_bool)
    $(_() as __ensure_value_int)
    $(_() as __ensure_value_string)
} >> function (\Yay\Ast $ast, \Yay\TokenStream $ts, \Yay\Index $start, \Yay\Index $end, \Yay\Engine $engine) {
    if ($GLOBALS['__context']['Nullable']) {
        $append = new \Yay\Ast('__context_Nullable');
        $append->push(new \Yay\Ast());
        $ast->append($append);
    }
    if ($GLOBALS['__context']['Signed'] ?? false) {
        $append = new \Yay\Ast('__context_Signed');
        $append->push(new \Yay\Ast());
        $ast->append($append);
    }
    $append = new \Yay\Ast('__ensure_value_'.$GLOBALS['__context']['Type']);
    $append->push(new \Yay\Ast());
    $ast->append($append);
} >> {{
    // region __ensure_value
    $(__context_Nullable ! {{
        $(__ensure_value_bool ? {{
            if (!\is_bool($(value))) {
                $$(expand(__throw(\TypeError, 'Value must be of type bool, '.\gettype($(value)).' given')))
            }
        }})
        $(__ensure_value_int ? {
            if (!\is_int($(value))) {
                $$(expand(__throw(\TypeError, 'Value must be of type int, '.\gettype($(value)).' given')))
            }
        })
        $(__ensure_value_string ? {
            if (!\is_string($(value))) {
                $$(expand(__throw(\TypeError, 'Value must be of type string, '.\gettype($(value)).' given')))
            }
        })
    }})

    $(__context_Nullable ? {{
        if (null !== $value) {
            $(__ensure_value_bool ? {{
                if (!\is_bool($(value))) {
                    $$(expand(__throw(\TypeError, 'Value must be of type bool or null, '.\gettype($(value)).' given')))
                }
            }})
            $(__ensure_value_int ? {
                if (!\is_int($(value))) {
                    $$(expand(__throw(\TypeError, 'Value must be of type int or null, '.\gettype($(value)).' given')))
                }
            })
            $(__ensure_value_string ? {
                if (!\is_string($(value))) {
                    $$(expand(__throw(\TypeError, 'Value must be of type string or null, '.\gettype($(value)).' given')))
                }
                
                if (\strlen($(value)) !== $[BytesPerElement]) {
                    $$(expand(__throw(\LengthException, \sprintf('Value must be exactly %d bytes, %d given', $[BytesPerElement], \strlen($(value))))))
                }
            })
        }
    }})
    // endregion
}}
