<?php

$(macro :unsafe) {
    __serializable_methods_benchmark()
} >> {
    private /* \Vectory\VectorInterface */ $instanceForSerializableSerialize;
    
    private /* string */ $serializedInstanceForSerializableUnserialize;
    
    private function setUpSerializableBenchmark(): void
    {
        $this->instanceForSerializableSerialize = self::getInstance();
        $this->instanceForSerializableSerialize[10000] = $[DefaultValue];
        
        $vector = self::getInstance();
        $vector[10000] = $[DefaultValue];
        $this->serializedInstanceForSerializableUnserialize = \serialize($vector);
    }

    /**
     * @Iterations(5)
     */
    public function benchSerializableSerialize(): void
    {
        \serialize($this->instanceForSerializableSerialize);
    }

    /**
     * @Iterations(5)
     */
    public function benchSerializableUnserialize(): void
    {
        \unserialize(
            $this->serializedInstanceForSerializableUnserialize,
            ['allowed_classes' => [\ltrim($[FullyQualifiedClassName], '\\')]]
        );
    }
}