<?php

$(macro :unsafe) {
    __serializable_methods_benchmark()
} >> {
    private /* \Vectory\VectorInterface */ $instanceForSerializableSerialize;
    
    private /* string */ $serializedInstanceForSerializableUnserialize;
    
    private function setUpSerializableBenchmark(): void
    {
        $this->instanceForSerializableSerialize = self::getInstance(true);
        $this->serializedInstanceForSerializableUnserialize =
            \serialize(self::getInstance(true));
    }

    /**
     * @Iterations(5)
     */
    public function benchSerializableSerialize(): void
    {
        \serialize($this->instanceForSerializableSerialize);
    }

    /**
     * @Iterations(5)
     */
    public function benchSerializableUnserialize(): void
    {
        \unserialize(
            $this->serializedInstanceForSerializableUnserialize,
            [
                'allowed_classes' =>
                    $<PoweredByArray>{false}
                    $<!PoweredByArray>{[\ltrim($[FullyQualifiedClassName], '\\')]}
                ,
            ]
        );
    }
}